<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ccai</groupId>
    <artifactId>JMeterToMavenDemo</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--此路径用于存储JMeter的原生测试结果文件，比如csv或者jtl-->
        <jmeter.result.jtl.dir>${project.build.directory}/jmeter/results</jmeter.result.jtl.dir>
        <!--此路径用于存储由模板转换过来的详细的测试结果的html文件-->
        <jmeter.result.html.dir>${project.build.directory}/jmeter/html_detail_report</jmeter.result.html.dir>
        <!--此路径用于存储由模板转换过来的测试结果的html文件-->
        <jmeter.result.html.dir1>${project.build.directory}/jmeter/html_report</jmeter.result.html.dir1>
        <ReportName>TestReport</ReportName>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!--核心插件，用于将Apache JMeter集成到Maven中-->
                <groupId>com.lazerycode.jmeter</groupId>
                <artifactId>jmeter-maven-plugin</artifactId>
                <version>2.9.0</version>
                <configuration>
                    <!-- 增加jar包,需要先将jar注册到本地maven仓库-->
                    <jmeterExtensions>
                        <!-- jmeter扩展插件 json path assert -->
                        <artifact>com.jmeter.ext:jmeter-plugins-json:2.7</artifact>
                    </jmeterExtensions>
                    <!--JMeter能够创建.jtl（XML格式）测试结果和csv测试结果。
                    默认情况下，此插件使用csv格式。这里需要将其切换为xml格式。-->
                    <resultsFileFormat>xml</resultsFileFormat>
                    <!--这里是否生成result report需要设置为false，否则运行时会出现“前言中不允许有内容”的报错。
                    因为若该项为true，无论你在.properties配置文件或者此pom文件中将结果文件的格式显示设置为xml，最后都只会生成csv的结果文件。
                    而csv的格式无法转换成我们最后要的html结果文件，就会报上述的错。-->
                    <generateReports>false</generateReports>
                    <!--忽略失败-->
                    <ignoreResultFailures>true</ignoreResultFailures>
                    <!--为结果文件添加时间戳-->
                    <testResultsTimestamp>true</testResultsTimestamp>
                    <!--指定日志级别-->
                    <overrideRootLogLevel>debug</overrideRootLogLevel>
                    <!--指定运行的jmeter脚本-->
                    <testFilesIncluded>imooc.jmx</testFilesIncluded>
                    <!--指定不需要运行的jmeter脚本-->
                    <testFilesExcluded>aaa.jmx</testFilesExcluded>
                </configuration>
                <executions>
                    <execution>
                        <id>jmeter-tests</id>
                        <goals>
                            <goal>jmeter</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--用于解析模板，并生成测试结果的html文件的插件-->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <!--在Maven生命周期中，通过verify命令执行JMeter的测试-->
                        <phase>verify</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <!--保存JMeter原生测试结果文件（.jtl文件）的路径-->
                            <dir>${jmeter.result.jtl.dir}</dir>
                            <!--需要解析的模板-->
                            <stylesheet>src/test/resources/jmeter-results-detail-report_21.xsl</stylesheet>
                            <!--通过模板生成测试结果的html文件-->
                            <outputDir>${jmeter.result.html.dir}</outputDir>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <!--保存JMeter原生测试结果文件（.jtl文件）的路径-->
                            <dir>${jmeter.result.jtl.dir}</dir>
                            <!--需要解析的模板-->
                            <stylesheet>src/test/resources/jmeter-results-report_21.xsl</stylesheet>
                            <!--通过模板生成测试结果的html文件-->
                            <outputDir>${jmeter.result.html.dir1}</outputDir>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>